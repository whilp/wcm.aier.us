#!/usr/bin/env python

import os
import sys

from boto.s3.connection import S3Connection

def main():
    paths = (os.path.normpath(p.rstrip("\n")) for p in sys.stdin)
    bucketname = sys.argv[1]

    conn = S3Connection()
    bucket = conn.get_bucket(bucketname)

    bucketsync(bucket, paths)

def bucketsync(bucket, paths, delete=True):
    keys = dict((k.name, k) for k in bucket.list())
    for path in paths:
        key = keys.pop(path, None)
        if not key:
            key = bucket.new_key(path)

        md5 = None
        if key.md5:
            md5 = key.compute_md5(path)
            if key.md5 == md5[0]:
                # Local and S3 copies match.
                continue
        key.set_contents_from_filename(path, md5=md5)
        key.make_public()

    if delete:
        # Any leftover keys have been removed locally and should be deleted from S3.
        for key in keys.values():
            key.delete()

if __name__ == "__main__":
    try:
        ret = main()
    except KeyboardInterrupt:
        ret = None
    sys.exit(ret)
